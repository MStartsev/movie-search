{"version":3,"file":"static/js/20.74838be5.chunk.js","mappings":"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","sources":["webpack://movie-search/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","servises/formatDate.js","servises/tmdb-api.js","views/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"title\":\"MoviesList_title__PB2c8\",\"item-title\":\"MoviesList_item-title__Ye4aM\",\"info\":\"MoviesList_info__5zfGK\",\"poster\":\"MoviesList_poster__aewlD\",\"default-poster\":\"MoviesList_default-poster__hRMd+\",\"backdrop\":\"MoviesList_backdrop__u1Q8G\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDate } from '../../servises/formatDate';\nimport css from './MoviesList.module.css';\nimport defaultPoster from '../../images/defaultImageFilm.jpg';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport default function MoviesList({ movies, location, title, query }) {\n  const [info, setInfo] = useState(false);\n\n  const handleMovieHover = async movieId => {\n    setInfo(movieId);\n  };\n\n  const handleMovieLeave = () => {\n    setInfo(false);\n  };\n\n  return (\n    <>\n      {!!movies.length ? (\n        <>\n          <h1 className={css.title}>{title}</h1>\n\n          <ul className={css.list}>\n            {movies.map(movie => (\n              <li\n                className={css.item}\n                key={movie.id}\n                title=\"Click to read movie details\"\n              >\n                <Link\n                  className={css.item}\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                  onMouseEnter={() => handleMovieHover(movie.id)}\n                  onMouseLeave={handleMovieLeave}\n                >\n                  {info && info === movie.id ? (\n                    <div className={css.item}>\n                      <img\n                        className={css.backdrop}\n                        src={\n                          !!movie.backdrop_path\n                            ? `${IMAGES_BASE_URL}${movie.backdrop_path}`\n                            : defaultPoster\n                        }\n                        alt={movie.title}\n                      />\n\n                      <h2 className={css['item-title']}>{movie.title}</h2>\n                      <p className={css.info}>Click to read movie details</p>\n                    </div>\n                  ) : (\n                    <>\n                      {!!movie.poster_path ? (\n                        <img\n                          className={css.poster}\n                          src={`${IMAGES_BASE_URL}${movie.poster_path}`}\n                          alt={movie.title}\n                        />\n                      ) : (\n                        <img\n                          className={css['default-poster']}\n                          src={defaultPoster}\n                          alt={movie.title}\n                        />\n                      )}\n\n                      {!movie.poster_path && (\n                        <>\n                          <h2 className={css['item-title']}>{movie.title}</h2>\n                          <p className={css.info}>\n                            {!!movie.release_date\n                              ? formatDate(movie.release_date)\n                              : '(no release date)'}\n                          </p>\n                        </>\n                      )}\n                    </>\n                  )}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        !!query && <h1 className={css.title}>{title}</h1>\n      )}\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import { format } from 'date-fns';\n\nexport const formatDate = date => {\n  return format(new Date(date), ' (yyyy)');\n};\n","import axios from 'axios';\n\nconst API_KEY = '1f2e1346f84e3b2d486a79ce9b661dcb';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getApiData = async (url, data) => {\n  try {\n    const response = await axios.get(url, data);\n\n    if (!response.data) throw new Error(response.statusText);\n    return response.data;\n  } catch (error) {\n    console.log(`Error making GET request to ${url}: ${error.message}`);\n  }\n};\n\nexport const getTrending = async () => await getApiData('/trending/movie/day');\n\nexport const getDetails = async movie_id =>\n  await getApiData(`/movie/${movie_id}`);\n\nexport const getCredits = async movie_id =>\n  await getApiData(`/movie/${movie_id}/credits`);\n\nexport const getReviews = async movie_id =>\n  await getApiData(`/movie/${movie_id}/reviews`);\n\nexport const getSearchByQuery = async query =>\n  await getApiData(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { getTrending } from '../../servises/tmdb-api';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTrending().then(({ results }) => {\n      setMovies(results);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading movies...</div>\n      ) : (\n        <MoviesList\n          movies={movies}\n          location={location}\n          title={'Trending today'}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["IMAGES_BASE_URL","MoviesList","movies","location","title","query","useState","info","setInfo","handleMovieHover","movieId","handleMovieLeave","length","className","css","map","movie","to","id","state","from","onMouseEnter","onMouseLeave","src","backdrop_path","defaultPoster","alt","poster_path","release_date","formatDate","date","format","Date","axios","api_key","getApiData","url","data","response","Error","statusText","console","log","message","getTrending","getDetails","movie_id","getCredits","getReviews","getSearchByQuery","params","useLocation","setMovies","isLoading","setLoading","useEffect","then","results"],"sourceRoot":""}